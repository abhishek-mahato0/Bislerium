@page "/changepassword"
@using CoffeeBucks.models
@using CoffeeBucks.Controllers
@using CoffeeBucks.Utils

<div class="modal">
    <div class="modal-container">
        <div class="modal-header w-full">
            <h2>Change your password.</h2>
        </div>
        <div class="modal-body w-full">
            <div class="mb-3 w-full">
                <label for="name" class="form-label">Current Password</label>
                <input type="text" id="name" class="form-control" @bind="currentPass">
            </div>
            <div class="mb-3 w-full">
                <label for="price" class="form-label">New Password</label>
                <input type="password" class="form-control" id="price" @bind="newPassword" />
            </div>
        </div>

        <div class="w-full modal-footer">
            <button type="button" class="btn btn-primary hover-effect" @onclick="changepassword">Change Password</button>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(error))
{
    <CoffeeBucks.Components.Layout.Components.Message CustomMessage="@error" OnClose="OnMessageClose" type="error" />
}

@if (!string.IsNullOrEmpty(success))
{
    <CoffeeBucks.Components.Layout.Components.Message CustomMessage="@success" OnClose="OnMessageClose" type="success" />
}

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private string newPassword { get; set; }
    private string currentPass { get; set; }
    private string success { get; set; }
    private string error { get; set; }
    PasswordUtils psUtils = new PasswordUtils(); 

    //change password
    private void changepassword()
    {
        try
        {
            CustomMessage message = new UserController().changePassword(_globalState.CurrentUser.Id, currentPass, newPassword);
            if (message.success)
            {
                success = message.message;
                newPassword = "";
                currentPass = "";
            }
            else
            {
                error = message.message;
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }

    }
    private void OnMessageClose()
    {
        success = string.Empty;
        error = string.Empty;
    }
}
